cmake_minimum_required (VERSION 2.8)
project(BRUT)
enable_testing()
file(MAKE_DIRECTORY obj/bin)
file(MAKE_DIRECTORY obj/bin/tests)
# Compile lzma static so that we can easily distribute.
find_library(LIBLZMA_LIBRARY liblzma.a REQUIRED HINTS /opt/boxen/homebrew/lib)
find_path(LIBLZMA_INCDIR lzma.h HINTS /usr/include /usr/local/include /opt/boxen/homebrew/include)
include_directories(bin ${LIBLZMA_INCDIR})
set(CMAKE_CXX_FLAGS "-std=c++0x -O0 -ggdb")
add_executable(obj/bin/brut bin/brut.cc)
target_link_libraries(obj/bin/brut edit)
target_link_libraries(obj/bin/brut z)
target_link_libraries(obj/bin/brut ${LIBLZMA_LIBRARY})
if(!APPLE)
target_link_libraries(obj/bin/brut ssl)
endif(!APPLE)
add_executable(obj/bin/tests/test_StringParser test/test_StringParser.cc)
set(CMAKE_CXX_FLAGS "-std=c++0x -O0 -ggdb")
add_executable(obj/bin/tests/test_ScalarParser test/test_ScalarParser.cc)
set(CMAKE_CXX_FLAGS "-std=c++0x -O0 -ggdb")
add_executable(obj/bin/tests/test_FieldNames test/test_FieldNames.cc)
set(CMAKE_CXX_FLAGS "-std=c++0x -O0 -ggdb")
add_test(obj/bin/tests/test_ScalarParser obj/bin/tests/test_ScalarParser)
add_test(test_StringParser obj/bin/tests/test_StringParser)
add_test(obj/bin/tests/test_FieldNames obj/bin/tests/test_FieldNames)
